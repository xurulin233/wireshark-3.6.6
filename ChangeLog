commit ea59fc43938
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Jun 13 07:35:59 2022 -0400

    tftp: Handle TFTP servers that don't switch ports

    If we get into the dissect_tftp call, we must have either matched
    a WRQ/RRQ at some point and created a wildcarded UDP conversation,
    or we matched the TFTP port. While it is contrary to the spirit
    of RFC 1350 for the server not to switch ports, it basically works
    and the port is IANA assigned, so it doesn't do harm to process these.
    In the heuristic dissector, of course, we don't do this.

    The conversation code doesn't automatically fill in wildcarded
    ports for UDP (since it's connectionless), and the wildcarded
    find_conversation call in the TFTP dissector was twisted around
    so it didn't actually fill in the second port before anyway.
    Filling in the server port would make sense, but then the necessary
    logic to find the right conversations would be more complicated.
    (The default find_conversation logic prefers any conversation with
    both ports to a wildcarded conversation, but the TFTP dissector would
    then want the most recent conversation, whether wildcarded or with
    both ports.)

    These packets were handled prior to the 3.6 changes. Fix #18122

    (cherry picked from commit 47c418d4195327d9b506a39ba078838dc4a45204)

commit c4f1711fbf5
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Jun 12 10:35:22 2022 -0400

    tftp: Fix spelling

    (cherry picked from commit 01f9dcbb7b4fcb1a1cd6087c982e3b59bd26de65)

commit d10bab4043a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 12 16:41:31 2022 +0000

    [Automatic update for 2022-06-12]

    Update manuf, services enterprise numbers, translations, and other items.

commit 635286ce0dc
Author: Jakub Jirutka <jakub@jirutka.cz>
Date:   Wed May 18 01:55:53 2022 +0200

    Qt: Fix segfault when some ICU codec is not available

        $ gdb --args wireshark
        (gdb) run
        Starting program: /usr/bin/wireshark
        [New LWP 10363]
        [New LWP 10364]
         ** (wireshark:10356) 13:13:14.137941 [GUI WARNING] -- codecForName: ucnv_open failed ISO-8859-2 U_FILE_ACCESS_ERROR
        (gdb) bt
        Thread 1 "wireshark" received signal SIGSEGV, Segmentation fault.
        0x00005555557b1959 in MainWindow::findTextCodecs (this=0x7fffecdfd390) at wireshark-3.6.5/ui/qt/main_window.cpp:2029
        2029            QString key = codec->name().toUpper();
        (gdb) bt
        #0  0x00005555557b1959 in MainWindow::findTextCodecs (this=0x7fffecdfd390) at wireshark-3.6.5/ui/qt/main_window.cpp:2029
        #1  0x00005555557b4ce3 in MainWindow::MainWindow (this=this@entry=0x7fffecdfd390, parent=parent@entry=0x0) at wireshark-3.6.5/ui/qt/main_window.cpp:362
        #2  0x000055555564f0af in main (argc=<optimized out>, qt_argv=0x7fffffffe748) at wireshark-3.6.5/ui/qt/main.cpp:725

    See https://gitlab.alpinelinux.org/alpine/aports/-/issues/13814 for more
    information.

commit afc14ac5f4d
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Wed Nov 24 22:22:50 2021 +0100

    FlexRay: Fixing tvb_bytes_to_str_punct warnings

commit 79512aedec4
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 5 16:39:07 2022 +0000

    [Automatic update for 2022-06-05]

    Update manuf, services enterprise numbers, translations, and other items.

commit 52f1500aee5
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue May 31 23:20:09 2022 -0400

    file: Free fname_new when rename successful.

    Plug a memory leak. If cf_save_records wrote to a temporary file,
    free the name if the rename is successful (not just if it fails.)

    (backported from 356a6ab0ea4503617a5bf0b021d1b936ad417e99)

commit 4b1c49cb974
Author: Dana Sy <dana.hayden.sy@gmail.com>
Date:   Thu May 26 17:50:16 2022 -0700

    Zigbee: Touchlink typo

    Fixed typo for Touchlink command filter name

    (cherry picked from commit eb3c77f306b84750ac754a14cb33a6e7f1b907d2)

commit 440f5499ba1
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 29 16:40:03 2022 +0000

    [Automatic update for 2022-05-29]

    Update manuf, services enterprise numbers, translations, and other items.

commit 5f0035b0911
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 22 16:41:25 2022 +0000

    [Automatic update for 2022-05-22]

    Update manuf, services enterprise numbers, translations, and other items.

commit fa8197513cf
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Dec 4 20:34:24 2021 -0500

    QT: Default sort simple stat tables by first column ascending

    Without this, the simple stat tables default to sorting by the first
    column in descending order. (An artifact of the QTreeWidget that they
    inherit from.) The first column is generally a message type (integer or
    string) and ascending order makes more sense.

    Some of the stat tables intentionally insert rows in a preferred order
    that is different than sorting by the first column (e.g, ANSI A I/F tables
    are sorted by the second column), but we can't tell what that is.
    QTreeWidget only allows the data to be shown in its original unsorted
    order if the widget is marked unsortable, but then the user isn't allowed
    to sort at all, and being able to sort by other columns (such as count)
    is useful.

    (cherry picked from commit 7987df81ff41b42cf688e2fff9453366a6e4e8c4)

commit 1d85bf7fb41
Author: Jason Cohen <kryojenik2@gmail.com>
Date:   Tue May 17 18:59:25 2022 -0500

    f5ethtrailer: Decode TLE 1.3 trailer info on some versions

    Some versions of BIG-IP create Type 2 Version 0 records with the
    Type 2 Version 1 size.  Allow for the decoding of these records.

    (cherry picked from commit 0cab39a86fce33656eea5911337907a29d252bd9)

commit d8d655a64e8
Author: Roland Knall <rknall@gmail.com>
Date:   Mon May 16 09:54:08 2022 +0000

    Qt: Fix File Path editor in table

    The current situation in UatDelegate as well as PathChooserDelegate leads to issues, where Wireshark crashes if the button is clicked. This is due to the UI not correctly positioning the button inside the cell.

    This change implements a widget, which will serve as cell content, handling all relations with choosing the file, but also properly handling the size and geometry of said cell content, therefore no longer leading to crashes and cleaning up code at the same time, as duplicate methods are being removed.

    Fixes #17789, #17819, #18088

commit 7cfb215bae0
Author: Roland Knall <rknall@gmail.com>
Date:   Mon May 16 14:48:37 2022 +0200

    extcap: Close pipe on windows properly

    Windows implements so called CRT handlers, which will catch any
    assertions happening inside so called crt routines and either
    displays a debug dialog (Cancel, Retry, Ignore) or outright crashes
    the application.

    See
    https://docs.microsoft.com/en-us/cpp/c-runtime-library/parameter-validation?view=msvc-170
    for an explanation of the behaviour.

    Now, in the current situation here, close will detect (correctly)
    that the pipe it is supposed to be closing is already closed. This
    happens (again correctly) because it had been closed by the extcap
    application.

    The change added, checks for a closed pipe first, and if so just
    returns -1 (as it should) silently without calling the CRT routine,
    therefore not crashing

    (cherry picked from commit 28b917a72e59583119ad09664a1de5d042aa7e9a)

commit f6a65b78724
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon May 16 10:13:23 2022 -0700

    Tools: Don't validate file_util.c.

    It's Windows-only.

    (cherry picked from commit 6c612bf2512d34cf543ed59ded6b78a8c2f08659)

commit 029f874c806
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Apr 26 09:32:08 2022 -0700

    Tools: Only validate a file if we have a build rule for it.

    In validate-clang-check.sh, only check files that have rules in
    compile_commands.json or build.ninja.

    (cherry picked from commit b53d349583d688c696a3f482fe6a6d9a607a2171)

commit 5b7b836e941
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Tue Jan 4 07:09:26 2022 +0000

    Validate only real C files, not templates

    (cherry picked from commit a4cbf047e4f7222ffc0388f648d64ddc371ac385)

commit 2de4d3e69c0
Author: Anders Broman <anders.broman@ericsson.com>
Date:   Wed Dec 22 11:18:07 2021 +0100

    Ignore packet-PROTOABBREV.c

    (cherry picked from commit b5928542b77cf789b112370bb7acc00942162519)

commit 80ba02ed940
Author: Zoran Bošnjak <zoran.bosnjak@via.si>
Date:   Fri Oct 29 23:24:44 2021 +0200

    asterix: Dissector automatic update from spec files

    Asterix data format is a complex family of asterix categories,
    where each individual category exists in multiple editions.
    As a result of many variants, the epan/dissectors/packet-asterix.c
    is one of the largest dissectors.

    So far, the asterix dissector had been maintained manually, where the
    generic decoding routines and category/edition specific definitions
    were entangled in the same file (packet-asterix.c).

    This commit preserves the overall dissector structure, but makes
    it easy to update the dissector with new categories or editions as
    they become available (via the update script from this commit).
    See tools/asterix/README.md file for dissector update procedure.

    This commit includes:

    - tools/asterix/packet-asterix-template.c
      Extraction of generic asterix decoding routines and
      common data structures.

    - tools/asterix/update-specs.py
      Update script, to render the template with up-to-date asterix
      specs files. The asterix specs files themselves are maintained in
      a separate repository.

    - epan/dissectors/packet-asterix.c
      Automatically generated dissector for asterix data format.
      Although generated, this file needs to remain in the repository,
      to be able to build the project in a reproducible way.

    The generated asterix dissector was additionally tested with:

    - ./tools/check_typed_item_calls.py --mask
    - ./tools/fuzz-test.sh

    Sync with asterix-specs #cef694825c

    (cherry picked from commit 16779dc43e7eef355e734b451c98ec8bfa93517b)

commit 4776ac65679
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 15 16:46:52 2022 +0000

    [Automatic update for 2022-05-15]

    Update manuf, services enterprise numbers, translations, and other items.

commit 2b99b9d22f4
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed May 11 09:21:41 2022 -0700

    Qt: Fix a version check.

    Qt::endl was introduced in 5.14.
    (cherry picked from commit 7b749f5e15bd55d06fa7bec15401056a2a90b71a)

commit 72912fa02fd
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed May 11 17:51:18 2022 -0700

    Windows: Upgrade to Npcap 1.60.

    Fixes #18084.

commit 25515d21ed5
Author: Roland Knall <rknall@gmail.com>
Date:   Wed May 11 12:22:29 2022 +0000

    Qt: Fix display filter read/write

    Display filters on Windows where broken in such a way that the file was generated with empty lines and the wrong file delimiters.

    Likewise, loading the file lead to issues when the formatting was not 100% match by the plattform being used

    Fixes #18082

    (cherry picked from commit ad28888d2f5d98c4dfa5a689f6f0626aad44c60d)

commit 8745505a724
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 8 16:36:51 2022 +0000

    [Automatic update for 2022-05-08]

    Update manuf, services enterprise numbers, translations, and other items.

commit 9589ec85b90
Author: Odysseus Yang <wiresharkyyh@outlook.com>
Date:   Fri May 6 10:22:52 2022 -0700

    MBIM: Fix the offset to RSRP and SNR buffer of MBIM_SIGNAL_STATE_INFO_V2

    (cherry picked from commit 8f4d38b776a744a9cea8b9b043b16dcef4d4fe59)

commit 3d310e89f69
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Mon Apr 25 03:00:44 2022 +0200

    TLS: fix RSA decryption with EMS and renegotiation

    The handshake hash is used to derive TLS decryption keys when the
    Extended Master Secret (EMS) extension is in use.
    ssl_calculate_handshake_hash updates this hash only when the master
    secret has not been determined yet.

    During TLS renegotiation, there are two master secrets: one before, and
    one after. Before this fix, the second calculated master secret is
    wrong because the second Client Hello is missing in the handshake hash.
    It was missing because the handshake hash was not being updated since
    the master secret for the first handshake was still present, and the
    decryption state was only reset after that hash update.

    To fix this, make sure to clear the SSL_MASTER_SECRET flag before
    updating the handshake hash when needed. Additionally, clear the
    handshake hash when processing the Client Hello just to make sure that
    any previous state is gone.

    Fixes #18059

    (cherry picked from commit 62100da7f4027aad801d1dea02998028674fb88d)

commit e7919534f39
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed May 4 19:23:26 2022 -0700

    Version: 3.6.5 → 3.6.6

    [skip ci]
